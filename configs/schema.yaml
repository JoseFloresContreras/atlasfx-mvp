# =============================================================================
# AtlasFX Schema Definition (v3.1)
# =============================================================================
# This schema defines all structural, logical, and semantic validation rules
# for the AtlasFX pipeline — covering tick, OHLC, and feature-level data.
# Each section can be parsed by the DataValidator for automated enforcement.
# =============================================================================

schema_version: "3.1.0"
strict_types: true
timestamp_format: "datetime64[ns, UTC]"

# =============================================================================
# TICK DATA (Level 1 Dukascopy feed)
# =============================================================================
tick_data:
  description: "Level 1 tick data from Dukascopy with bid/ask/volume"
  source: "Dukascopy Historical Data Feed"
  schema_type: "raw_ticks"

  required_columns:
    timestamp:
      type: datetime64[ns]
      description: "UTC timestamp of the tick"
      nullable: false
      constraints:
        - monotonic_increasing: true
        - timezone: "UTC"

    bid:
      type: float64
      description: "Best bid price"
      nullable: false
      constraints:
        - min_value: 0.0
        - max_value: 1e6

    ask:
      type: float64
      description: "Best ask price"
      nullable: false
      constraints:
        - min_value: 0.0
        - max_value: 1e6

    volume:
      type: float64
      description: "Trade volume (optional)"
      nullable: true
      constraints:
        - min_value: 0.0

  cross_column_constraints:
    - name: "no_crossed_spreads"
      description: "Ask must be >= Bid"
      rule: "ask >= bid"

    - name: "reasonable_spread"
      description: "Spread < 1% of mid-price"
      rule: "(ask - bid) / ((ask + bid) / 2) < 0.01"
      severity: "warning"

  quality_checks:
    - name: "no_duplicates"
      description: "Timestamps must be unique"
      rule: "timestamp.is_unique"

    - name: "no_large_gaps"
      description: "No timestamp gaps > 1h"
      rule: "timestamp.diff().max() < timedelta(hours=1)"
      severity: "warning"

    - name: "no_extreme_outliers"
      description: "Price jumps < 10% per tick"
      rule: "mid_price.pct_change().abs() < 0.1"
      severity: "warning"

# =============================================================================
# AGGREGATED OHLC DATA
# =============================================================================
ohlc_data:
  description: "Time-aggregated OHLC bars with volume"
  schema_type: "aggregated"

  required_columns:
    timestamp:
      type: datetime64[ns]
      description: "Start timestamp of the bar"
      nullable: false
      constraints:
        - monotonic_increasing: true
        - timezone: "UTC"

    open:
      type: float64
      description: "Opening mid-price"
      nullable: false
      constraints:
        - min_value: 0.0

    high:
      type: float64
      description: "Highest mid-price in window"
      nullable: false
      constraints:
        - min_value: 0.0

    low:
      type: float64
      description: "Lowest mid-price in window"
      nullable: false
      constraints:
        - min_value: 0.0

    close:
      type: float64
      description: "Closing mid-price"
      nullable: false
      constraints:
        - min_value: 0.0

    volume:
      type: float64
      description: "Total volume traded"
      nullable: true
      constraints:
        - min_value: 0.0

    tick_count:
      type: int64
      description: "Number of ticks in the window"
      nullable: false
      constraints:
        - min_value: 0

  cross_column_constraints:
    - name: "ohlc_ordering"
      description: "Ensure logical order of OHLC prices"
      rule: "(high >= open) and (high >= close) and (high >= low) and (low <= open) and (low <= close)"

# =============================================================================
# FEATURE MATRIX (Featurization stage)
# =============================================================================
feature_matrix:
  description: "Feature matrix for VAE/TFT/SAC models"
  schema_type: "features"

  required_columns:
    timestamp:
      type: datetime64[ns]
      description: "Timestamp of feature vector"
      nullable: false
      constraints:
        - monotonic_increasing: true

    mid_price:
      type: float64
      description: "Mid price = (bid + ask)/2"
      nullable: false

    returns:
      type: float64
      description: "Log returns"
      nullable: true
      constraints:
        - abs_value_lt: 1.0

    spread:
      type: float64
      description: "Ask - Bid"
      nullable: false
      constraints:
        - min_value: 0.0

    volume:
      type: float64
      description: "Volume over interval"
      nullable: true
      constraints:
        - min_value: 0.0

    vwap:
      type: float64
      description: "Volume-weighted average price"
      nullable: true

    ofi:
      type: float64
      description: "Order flow imbalance"
      nullable: true

    micro_price:
      type: float64
      description: "Order flow weighted micro price"
      nullable: true

  quality_checks:
    - name: "no_inf_values"
      description: "No infinite values in numeric columns"
      rule: "not df.replace([np.inf, -np.inf], np.nan).isna().any().any()"

    - name: "reasonable_returns"
      description: "Returns within ±100%"
      rule: "returns.abs() < 1.0"
      severity: "warning"

# =============================================================================
# PIPELINE CONFIGURATION SCHEMA
# =============================================================================
pipeline_config:
  description: "Configuration schema for AtlasFX data pipeline"

  aggregation:
    window_size:
      type: str
      description: "Aggregation window"
      allowed_values: ["1min", "5min", "10min", "15min", "30min", "1h"]

    aggregators:
      type: list[str]
      description: "List of aggregator functions"
      allowed_values:
        ["mean", "high", "low", "close", "vwap", "ofi", "micro_price", "volume", "tick_count"]

  normalization:
    method:
      type: str
      description: "Normalization method"
      allowed_values: ["zscore", "minmax", "robust"]

    clip_threshold:
      type: float
      description: "Z-score clipping threshold"
      constraints:
        - min_value: 0.0

  split:
    train_ratio:
      type: float
      description: "Training set fraction"
      constraints:
        - min_value: 0.0
        - max_value: 1.0

    val_ratio:
      type: float
      description: "Validation set fraction"
      constraints:
        - min_value: 0.0
        - max_value: 1.0

    test_ratio:
      type: float
      description: "Test set fraction"
      constraints:
        - min_value: 0.0
        - max_value: 1.0

    cross_field_constraints:
      - name: "ratios_sum_to_one"
        rule: "abs(train_ratio + val_ratio + test_ratio - 1.0) < 1e-6"

# =============================================================================
# SUPPORTED INSTRUMENTS
# =============================================================================
instruments:
  description: "Supported trading instruments and metadata"

  forex_pairs:
    - symbol: "EURUSD"
      description: "Euro / US Dollar"
      min_tick: 0.00001

    - symbol: "GBPUSD"
      description: "British Pound / US Dollar"
      min_tick: 0.00001

    - symbol: "USDJPY"
      description: "US Dollar / Japanese Yen"
      min_tick: 0.001

    - symbol: "USDCHF"
      description: "US Dollar / Swiss Franc"
      min_tick: 0.00001

    - symbol: "AUDUSD"
      description: "Australian Dollar / US Dollar"
      min_tick: 0.00001

    - symbol: "USDCAD"
      description: "US Dollar / Canadian Dollar"
      min_tick: 0.00001

    - symbol: "NZDUSD"
      description: "New Zealand Dollar / US Dollar"
      min_tick: 0.00001

# =============================================================================
# VALIDATION RULES REFERENCE
# =============================================================================
validation_rules:
  description: "Reference for validation rule syntax"
  supported_column_types:
    - int64
    - float64
    - datetime64[ns]
    - object
    - bool

  constraint_types:
    - min_value: "Minimum allowed value"
    - max_value: "Maximum allowed value"
    - allowed_values: "Set of accepted categorical values"
    - monotonic_increasing: "Sequence must be sorted ascending"
    - nullable: "Allow missing or null values"
    - abs_value_lt: "Absolute value must be less than threshold"

  severity_levels:
    - error: "Stop pipeline on violation"
    - warning: "Log warning, continue execution"
    - info: "Informational notice, no action required"
